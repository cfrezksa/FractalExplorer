// -------------------------- SHADING SNIPPET  --------------------------------------

uniform vec3 backgroundColor = vec3(0,0,0);
uniform vec3 keyLightDir;
uniform vec3 keyLightColor;

uniform float fog = 0.5;
uniform float fogFalloff = 0.001;
uniform float fogPower = 1.0;

vec3 N;
vec3 V;
vec4 albedo;

vec3 estimateNormal(vec3 p);
vec3 lighting(vec3 p);
vec4 computeAlbedo();
void applyFog(inout vec3 col);
void applyInnerGlow(inout vec3 col);
void applyOuterGlow(inout vec3 col);

vec3 shading() {
	
    N = normalize(estimateNormal(rayPos));

	V = -normalize(rayDirection);
	
    vec3  L = normalize(keyLightDir);

	// material		
    albedo = computeAlbedo();

    vec3 col = keyLightColor * lighting(L);

	float ao = ambientOcclusion(rayPos, N, 0.001);
	
	applyInnerGlow(col);
	applyFog(col);

	return col * ao;
}

vec3 background() {

	vec3 col = backgroundColor;
	applyOuterGlow(col);
	applyFog(col);
	return col;
}

// -------------------- END OF SHADING SNIPPET  -----------------------------------
